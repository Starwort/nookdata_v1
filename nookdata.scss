$winter: #3c84c6;
$spring: #38761c;
$summer: #e69038;
$autumn: #b45f04;
$modelled-dark: gold;
$modelled-light: #fbc02d;
$primary-dark: #bb86fc;
$primary-light: #6200ee;
$error-dark: #cf6679;
$error-light: #b00020;

@use "sass:color";

@font-face {
    font-family: "ACNH";
    font-style: normal;
    font-weight: 400;
    src: url(https://starwort.github.io/nookdata/assets/fonts/humming.ttf)
        format("truetype");
}

.mdc-card.card-winter {
    body[hemisphere="south"] & {
        background-color: $summer;
    }
    body:not([hemisphere="south"]) & {
        background-color: $winter;
    }
    color: #000000;
    color: var(--mdc-theme-text-primary-on-light, #000000);
}

.mdc-card.card-spring {
    body[hemisphere="south"] & {
        background-color: $autumn;
    }
    body:not([hemisphere="south"]) & {
        background-color: $spring;
    }
    color: #000000;
    color: var(--mdc-theme-text-primary-on-light, #000000);
}

.mdc-card.card-summer {
    body[hemisphere="south"] & {
        background-color: $winter;
    }
    body:not([hemisphere="south"]) & {
        background-color: $summer;
    }
    color: #000000;
    color: var(--mdc-theme-text-primary-on-light, #000000);
}

.mdc-card.card-autumn {
    body[hemisphere="south"] & {
        background-color: $spring;
    }
    body:not([hemisphere="south"]) & {
        background-color: $autumn;
    }
    color: #000000;
    color: var(--mdc-theme-text-primary-on-light, #000000);
}

.mdc-card.card-inactive {
    body[theme="dark"] & {
        opacity: 0.3;
    }
    body[theme="light"] & {
        opacity: 0.6;
    }
}

.month-panels {
    width: 100%;
    & td {
        width: 33%;
        text-align: center;
    }
}

.critter-info {
    & .mdc-dialog__container .mdc-dialog__surface {
        border: 1px solid transparent;
        transition: border-color 0.5s ease-in-out;
        & .mdc-dialog__title {
            transition: color 0.5s ease-in-out;
        }
    }
    text-align: center;
}

.time-tracker {
    width: 100%;
    // background-color: #1e1e1e;
}

.padded-container {
    margin: 16px;
    text-align: center;

    // & > table {
    //     display: inline-block;
    //     text-align: initial;
    // }
}

.critter-table-title {
    & .critter-type {
        &::after {
            content: " - ";
        }
    }
    & .obtained-count {
        color: var(--mdc-theme-primary);
        &::after {
            content: " / 80 ";
        }
    }
    & .modelled-count {
        body[theme="dark"] & {
            color: $modelled-dark;
        }
        body[theme="light"] & {
            color: $modelled-light;
        }
        &::before {
            content: "(";
        }
        &::after {
            content: " / 80)";
        }
    }
    font-size: 1.5em;
}

.critter-panel {
    text-align: center;
    width: 66px;
    margin: 3px;
    body[theme] & {
        background-color: transparent;
    }
    transition: opacity 0.5s ease-in-out, color 1s ease-in-out,
        background-color 0.5s ease-in-out, border-color 0.5s ease-in-out;

    body[theme="light"] & {
        border: 1px solid transparent;
    }

    & i.material-icons {
        display: block;
        padding-top: 16px;
    }

    & img {
        width: 64px;
        height: 64px;
    }

    &.no-match {
        opacity: 0.3;
    }

    body[theme="dark"] &.unavailable {
        background-color: transparentize($error-dark, 0.7);
        color: $error-dark;
        border: 1px solid $error-dark;
    }
    body[theme="light"] &.unavailable {
        background-color: transparentize($error-light, 0.5);
        color: $error-light;
        border: 1px solid $error-light;
    }
    body[theme="dark"] &.danger {
        color: $error-dark;
    }
    body[theme="light"] &.danger {
        color: $error-light;
    }

    &.obtained {
        body[theme="dark"] & {
            background-color: transparentize($primary-dark, 0.7);
            &:not(.unavailable):not(.modelled) {
                &:not(.danger) {
                    color: $primary-dark;
                }
                border: 1px solid $primary-dark;
            }
            & + div .mdc-dialog__surface {
                & .mdc-dialog__title {
                    color: $primary-dark;
                }
                border-color: $primary-dark;
            }
        }
        body[theme="light"] & {
            background-color: transparentize($primary-light, 0.5);
            &:not(.unavailable):not(.modelled) {
                &:not(.danger) {
                    color: $primary-light;
                }
                border: 1px solid $primary-light;
            }
            & + div .mdc-dialog__surface {
                & .mdc-dialog__title {
                    color: $primary-light;
                }
                border-color: $primary-light;
            }
        }
    }
    &.modelled {
        body[theme="dark"] & {
            background-color: transparentize($modelled-dark, 0.7);
            border: 1px solid $modelled-dark;
            color: $modelled-dark;
            & + div .mdc-dialog__surface {
                & .mdc-dialog__title {
                    color: $modelled-dark;
                }
                border-color: $modelled-dark;
            }
        }
        body[theme="light"] & {
            background-color: transparentize($modelled-light, 0.5);
            border: 1px solid $modelled-light;
            color: $modelled-light;
            & + div .mdc-dialog__surface {
                & .mdc-dialog__title {
                    color: $modelled-light;
                }
                border-color: $modelled-light;
            }
        }
    }
}

body[theme] .mdc-card.info-panel {
    display: grid;
    padding: 16px;
    grid:
        "image dry rain"
        "image label_found found"
        "image label_price price"
        "image label_shadow shadow"
        "obtained modelled modelled";
    grid-template-columns: 50% 25% 25%;

    & img {
        grid-area: image;
        margin: auto;
    }
    & .dry-indicator {
        cursor: default;
        grid-area: dry;
        color: $summer;
        font-size: xx-large;
    }
    & .rain-indicator {
        cursor: default;
        grid-area: rain;
        font-size: xx-large;
    }
    & .location {
        grid-area: found;
        margin: 0.25em;
    }
    & .label-location {
        grid-area: label_found;
        margin: 0.25em;
    }
    & .sell-value {
        grid-area: price;
        margin: 0.25em;
    }
    & .label-sell-value {
        grid-area: label_price;
        margin: 0.25em;
    }
    & .shadow-size {
        grid-area: shadow;
        margin: 0.25em;
    }
    & .label-shadow-size {
        grid-area: label_shadow;
        margin: 0.25em;
    }
    & .checkbox-obtained {
        grid-area: obtained;
        margin: auto;
    }
    & .checkbox-modelled {
        grid-area: modelled;
        margin: auto;
    }
}

$cursor-modes: (
    alias,
    all-scroll,
    auto,
    cell,
    context-menu,
    col-resize,
    copy,
    crosshair,
    default,
    e-resize,
    ew-resize,
    grab,
    grabbing,
    help,
    move,
    n-resize,
    ne-resize,
    nesw-resize,
    ns-resize,
    nw-resize,
    nwse-resize,
    no-drop,
    none,
    not-allowed,
    pointer,
    progress,
    row-resize,
    s-resize,
    se-resize,
    sw-resize,
    text,
    w-resize,
    wait,
    zoom-in,
    zoom-out
);

@each $mode in $cursor-modes {
    .cursor-#{$mode} {
        cursor: $mode;
    }
}

/* width */
::-webkit-scrollbar {
    width: 5px;
    height: 5px;
    &-track,
    &-corner {
        background-color: transparent;
    }
    &-thumb {
        background-color: #7f7f7f1f;
        border-radius: 2.5px;
        // transition: background-color 0.2s ease-in-out;
        &:hover {
            background-color: #7f7f7f3f;
        }
        &:active {
            background-color: #7f7f7f7f;
        }
    }
}

body {
    display: flex;
    height: 100vh;
    text-align: center;
    font-family: "ACNH", sans-serif;
    --mdc-typography-font-family: "ACNH", sans-serif;
    // Ensure that the styles are not overridden
    &[theme] {
        // Use z-index to ensure that the app bar is in front of the list
        // and apply a box shadow
        & .mdc-top-app-bar {
            z-index: 7;
            box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
                0px 4px 5px 0px rgba(0, 0, 0, 0.14),
                0px 1px 10px 0px rgba(0, 0, 0, 0.12);
        }
        & .mdc-card.card-current {
            border: 2px solid var(--mdc-theme-error);
        }
    }
}

.mdc-drawer-app-content {
    flex: auto;
    overflow: auto;
    position: relative;
}

main {
    overflow: auto;
    height: 100%;
}

.main-content {
    display: inline-block;
}
